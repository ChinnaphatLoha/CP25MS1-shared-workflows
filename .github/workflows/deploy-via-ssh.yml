name: Reusable SSH Deploy

on:
    workflow_call:
        inputs:
            service_name:
                required: true
                type: string

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Set up SSH
              run: |
                  mkdir -p ~/.ssh
                  echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
                  chmod 600 ~/.ssh/id_ed25519
                  ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

            - name: Deploy via SSH
              env:
                  SERVICE_NAME: ${{ inputs.service_name }}
              run: |
                  TIMESTAMP=$(date +"%Y%m%d%H%M%S")

                  ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "
                    mkdir -p /srv/$SERVICE_NAME/releases/$TIMESTAMP
                    mkdir -p /srv/$SERVICE_NAME/shared
                  "

                  rsync -avz --delete ./ \
                    ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/srv/$SERVICE_NAME/releases/$TIMESTAMP/

                  ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "
                    ln -sfn /srv/$SERVICE_NAME/releases/$TIMESTAMP /srv/$SERVICE_NAME/current
                  "

            - name: Restart service (if systemd exists)
              if: ${{ inputs.service_name != 'nginx' }} # optional, avoid restarting nginx if not managed by systemd
              env:
                  SERVICE_NAME: ${{ inputs.service_name }}
              run: |
                  ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "
                    if systemctl list-unit-files | grep -q my-$SERVICE_NAME.service; then
                      sudo systemctl restart my-$SERVICE_NAME.service
                    fi
                  "
